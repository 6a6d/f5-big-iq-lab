---
- name: TOWER-AS3-BIG-IQ - Application Service
  hosts: bigiq
  connection: local
  gather_facts: false

  tasks:

    - set_fact:
        mgmt: "{{ hostvars[inventory_hostname]['mgmt_ip'] }}:{{ hostvars[inventory_hostname]['mgmt_port'] }}"

    - name: Authenticate to BIG-IQ
      uri:
        url: "https://{{ mgmt }}/mgmt/shared/authn/login"
        method: POST
        headers:
          Content-Type: application/json
        body:
          username: "{{ bigiq_user }}"
          password: "{{ bigiq_pass }}"
          loginProviderName: RadiusServer
        body_format: json
        timeout: 60
        status_code: 200, 202
        validate_certs: false
      register: auth

    - name: Send AS3 Declaration - POST /mgmt/shared/appsvcs/declare?async=true
      uri:
        url: https://{{ mgmt }}/mgmt/shared/appsvcs/declare?async=true
        method: POST
        headers:
          Content-Type: application/json
          X-F5-Auth-Token: "{{auth.json.token.token}}"
        body: "{{ lookup('template','j2/'+app_type+'.j2') }}"
        body_format: json
        timeout: 60
        status_code: 200, 202
        validate_certs: false
      register: json_response

    - pause:
        seconds: 5

    ## LOOP TO CHECK THE TASK

    - name: LOOP Check AS3 Deployment Task - GET /mgmt/shared/appsvcs/task/<task_id>
      uri:
        url: https://{{ mgmt }}/mgmt/shared/appsvcs/task/{{json_response.json.id}}
        method: GET
        headers:
          Content-Type: application/json
          X-F5-Auth-Token: "{{auth.json.token.token}}"
        status_code: 200, 202
        validate_certs: false
      register: json_response_task
      until: "json_response_task.json[0].results != 'pending'"
      retries: 20
      delay: 15

    - debug:
        var: json_response_task.json

# Create Ansible Tower Template based on Application
- import_playbook: tower_template.yml